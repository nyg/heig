swagger: '2.0'
info:
  version: '1.0.0'
  title: Online Shop API
  description: API to browse a shop, add items to cart and edit them, add new articles
  termsOfService: none
  contact:
    name: Nikolaos Garanis, Samuel Mettler
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /articles:
    get:
      tags:
        - public
      summary: Browse article.
      description: Allows a user to browse the complete list of articles available.
      produces:
        - application/json
      responses:
        200:
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/article'

  /article:
    post:
      tags:
        - private
      summary: Create an article
      description: Allows an admin to create a new articles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: article
          in: body
          required: true
          schema:
            $ref: '#/definitions/article'
      responses:
        201:
          description: created
          schema:
            $ref: '#/definitions/article'
    put:
      tags:
        - private
      summary: Edit an article
      description: Allows an admin to edit an article
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: article
          in: body
          required: true
          schema:
            $ref: '#/definitions/optionalArticle'
      responses:
        200:
          description: updated
          schema:
            $ref: '#/definitions/article'

  /article/{articleID}:
    get:
      tags:
        - private
      summary: Get specified article
      description: Allow a user to get info on article by specifying its id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: articleID
          description: ID of the article
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/article'

    delete:
      tags:
        - private
      summary: Delete specified article
      description: Allow an admin to delete an article
      parameters:
        - in: path
          name: articleID
          description: ID of the article
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: ok

  /customer:
    get:
      tags:
        - private
      summary: Get current user informations.
      security:
        - Bearer: []
      description: Allow the customer to get his personnal information.
      produces:
        - application/json
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/customer'

    put:
      tags:
        - private
      summary: Update customer information
      description: Allow a user to update its information
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/optionalCustomer'
      responses:
        200:
          description: updated
          schema:
            $ref: '#/definitions/customer'
  /cart:
    get:
      tags:
        - private
      summary: Get content of cart
      description: Allow a user to consult all articles in his cart
      produces:
        - application/json
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/article'
    put:
      tags:
        - private
      summary: Update articles in cart
      description: Allow any user to add articles to his cart
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: article
          in: body
          required: true
          schema:
            $ref: '#/definitions/article'
      responses:
        200:
          description: updated
          schema:
            type: array
            items:
              $ref: '#/definitions/article'
    delete:
      tags:
        - private
      summary: Delete all articles from cart
      description: Allow any user to delete an article from his cart
      consumes:
        - application/json
      parameters:
        - name: article
          in: body
          required: true
          schema:
            $ref: '#/definitions/article'
      responses:
        200:
          description: deleted

  /cart/{articleID}:
    delete:
      tags:
        - private
      summary: Delete specified article from cart
      description: Allow a user to delete on article from his cart on specifying the id
      parameters:
        - in: path
          name: articleID
          description: ID of the article
          required: true
          type: integer
      responses:
        200:
          description: updated

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  article:
    type: object
    required:
      - name
      - price
      - description
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: integer
      description:
        type: string
  optionalArticle:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: integer
      description:
        type: string
  customer:
    type: object
    required:
      - email
      - firstName
      - lastName
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      address:
        type: string

  optionalCustomer:
    type: object
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      address:
        type: string